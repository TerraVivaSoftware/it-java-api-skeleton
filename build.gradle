buildscript {
	ext {
		springBootVersion = '2.2.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		// https://mvnrepository.com/artifact/org.owasp/dependency-check-gradle
		classpath "org.owasp:dependency-check-gradle:5.2.4"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

apply from: 'gradle/plugins/dependency-check/config.gradle'

group = 'com.ciandt'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}

ext {
	springCloudVersion = 'Greenwich.RELEASE'
}

ext['tomcat.version'] = '9.0.30'

dependencies {

	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-actuator')
	runtime('org.springframework.boot:spring-boot-devtools')

//	compile files('libs/ojdbc7.jar')
	compile('com.h2database:h2:1.4.200')

	// Utils
	compile 'com.vidolima:ditiow:0.2.1'
	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.8'

	// Swagger
	compile('io.springfox:springfox-swagger2:2.9.2')
	compile('io.springfox:springfox-swagger-ui:2.9.2')

	// log
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1')

	// tests
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile('com.h2database:h2:1.4.200')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootRun {
	jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4010,suspend=n'
			   , '-Dspring.profiles.active=local'
	]
}

springBoot {
	buildInfo()
}

bootJar {
	baseName "api"
	launchScript()
}

task zipDBScripts(type: Zip) {
	from 'database/changelog'
	include '*'
	include '*/*'
	archiveName 'database.zip'
	destinationDir(file('./'))
}